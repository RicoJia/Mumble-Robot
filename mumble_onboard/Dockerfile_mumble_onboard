# DOCKER_BUILDKIT=1 docker build --build-arg USER_ID=$(id -u) --build-arg UNAME=$(whoami) --build-arg GROUP_ID=$(id -g) -t halo-image .
# sudo docker run --name halo_container --rm -e DISPLAY=$DISPLAY -v /etc/passwd:/etc/passwd:ro -v /etc/group:/etc/group:ro --user $(id -u):$(id -g) -v /tmp/.X11-unix:/tmp/.X11-unix:ro -v $HOME/.Xauthority:/root/.Xauthority -e XAUTHORITY=/root/.Xauthority -v ~/.ssh:/root/.ssh --dns 8.8.8.8 --dns 8.8.4.4 -it --network="host" --privileged halo-image

# This base image may/may not play well with pyrealsense through pip install

FROM ros:humble-ros-base
ENV DEBIAN_FRONTEND=noninteractive \
    LANG=C.UTF-8 \
    LC_ALL=C.UTF-8

# # Note: technically, we want to reduce the amount of layers. But for faster builds, we have multiple layers
# RUN apt-get update && apt-get install -y \
#     vim \
#     ccache \
#     # camera service
#     python3-pip \
#     python3-catkin-tools \
#     v4l-utils \
#     wget \
#     unzip \
#     git \
#     # useful for git complete
#     bash-completion \
#     && rm -rf /var/lib/apt/lists/*

RUN apt-get update && apt-get install -y \
    python3-pip \
    vim \
    byobu \
    ccache \
    # v4l-utils \
    # wget \
    # unzip \
    git \
    openssh-client \
    # # useful for git complete
    bash-completion \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

    # Must have - without these, ros topics will not work.
RUN apt-get update && apt-get install -y \
    python3-colcon-common-extensions \
    ros-humble-rclpy \
    ros-humble-rmw-fastrtps-cpp \
    # ros-humble-rmw-cyclonedds-cpp \
    ros-humble-ros2interface \
    ros-humble-ros2topic \
    && apt-get clean && rm -rf /var/lib/apt/lists/*


# Ceres and Google dependencies
RUN apt-get update && apt-get install -y \
    liblapack-dev \
    libsuitesparse-dev \
    libcxsparse3 \
    libgflags-dev \
    libgoogle-glog-dev \
    libceres-dev \
    libeigen3-dev \
    && rm -rf /var/lib/apt/lists/

RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    git \
    libgtest-dev \
    && rm -rf /var/lib/apt/lists/*

RUN apt-get update && apt-get install -y \
    gdb \
    libsuitesparse-dev

RUN pip3 install open3d

# Create a user to match the host's UID/GID and create necessary directories
# Ros needs to access /home/${UNAME}/.ros/ So we need to set up the permission properly there. 
# Unique numbers for each group and user. 1000 is the first regular number
ARG UNAME="mumble_onboard"
# Sets default value if docker build --build-arg UID=1000 is not provided.
# So, one caveat of this script is on Rpi, UID, GID have to be 1000.
ARG UID=1000
ARG GID=1000
RUN groupadd -f -g $GID $UNAME
RUN id -u $UNAME || useradd -m -u $UID -g $GID -s /bin/bash $UNAME
# RUN adduser --disabled-password --gecos '' ${UNAME}
RUN adduser ${UNAME} sudo
# adding UNAME to sudoers
RUN echo "${UNAME} ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

ENV CCACHE_DIR=/ccache
ENV CC="ccache gcc"
ENV CXX="ccache g++"
ENV PATH="/usr/lib/ccache:$PATH"
ENV CUSTOM_INSTALL_PATH="/home/${UNAME}/custom_installs"
# Create the ccache directory with appropriate permissions
RUN mkdir -p $CCACHE_DIR && chmod -R 777 $CCACHE_DIR
# RUN mkdir -p ${CUSTOM_INSTALL_PATH}

# Env variables will persist across images
ENV WORKDIRECTORY=/home/mumble_robot
ENV PKG_NAME=mumble_onboard
ENV PACKAGE_DIR=/home/mumble_robot/src/${PKG_NAME}
# mumble_physical_runtime/bin
ENV PATH="$PACKAGE_DIR/bin:${PATH}"
WORKDIR ${WORKDIRECTORY}

# Switch to user
USER ${UNAME}
WORKDIR $WORKDIRECTORY

RUN echo "source /opt/ros/humble/setup.bash" >> /home/$UNAME/.bashrc  && \
    echo '"\e[A": history-search-backward' >> /home/${UNAME}/.inputrc && \
    echo '"\e[B": history-search-forward' >> /home/${UNAME}/.inputrc && \
    echo "source /usr/share/colcon_argcomplete/hook/colcon-argcomplete.bash" >> ~/.bashrc && \
    # echo "export RMW_IMPLEMENTATION=rmw_cyclonedds_cpp" >> ~/.bashrc && \
    echo "source $PACKAGE_DIR/bin/mumble_onboard_bashrc.sh" >> ~/.bashrc

CMD /bin/bash

