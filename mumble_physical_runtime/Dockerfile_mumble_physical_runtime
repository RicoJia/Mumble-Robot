# docker buildx build --platform linux/arm64/v8 -f Dockerfile_mumble_physical_runtime -t mumble_physical_runtime_rpi . --load
# docker tag mumble_physical_runtime_rpi:latest ricojia/mumble_physical_runtime_rpi:latest
# docker push ricojia/mumble_physical_runtime_rpi:latest
FROM ros:humble-ros-base

ENV DEBIAN_FRONTEND=noninteractive \
    LANG=C.UTF-8 \
    LC_ALL=C.UTF-8

RUN apt-get update && apt-get install -y \
    python3-pip \
    vim \
    byobu \
    # v4l-utils \
    # wget \
    # unzip \
    git \
    openssh-client \
    # # useful for git complete
    bash-completion \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# Must have - without these, ros topics will not work.
RUN apt-get update && apt-get install -y \
    python3-colcon-common-extensions \
    ros-humble-rclpy \
    ros-humble-rmw-fastrtps-cpp \
    # ros-humble-rmw-cyclonedds-cpp \
    ros-humble-ros2interface \
    ros-humble-ros2topic \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

RUN apt-get update && apt-get install -y \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# Give the image the same user privilege as the host user
RUN python3 -m pip install \
    pyserial

# Unique numbers for each group and user. 1000 is the first regular number
ARG UNAME="mumble_physical_runtime"
# Sets default value if docker build --build-arg UID=1000 is not provided.
# So, one caveat of this script is on Rpi, UID, GID have to be 1000.
ARG UID=1000
ARG GID=1000
RUN groupadd -f -g $GID $UNAME
RUN id -u $UNAME || useradd -m -u $UID -g $GID -s /bin/bash $UNAME
# RUN adduser --disabled-password --gecos '' ${UNAME}
RUN adduser ${UNAME} sudo
# adding UNAME to sudoers
RUN echo "${UNAME} ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers
USER $UNAME
# Env variables will persist across images
ARG WORKDIRECTORY="TO_GET_FROM_DOCKER_COMPOSE"
ARG PACKAGE_DIR="TO_GET_FROM_DOCKER_COMPOSE"
# mumble_physical_runtime/bin
ENV PATH="${PACKAGE_DIR}/bin:${PATH}"
WORKDIR ${WORKDIRECTORY}

RUN echo "source /opt/ros/humble/setup.bash" >> /home/$UNAME/.bashrc  && \
    echo '"\e[A": history-search-backward' >> /home/${UNAME}/.inputrc && \
    echo '"\e[B": history-search-forward' >> /home/${UNAME}/.inputrc && \
    echo "source /usr/share/colcon_argcomplete/hook/colcon-argcomplete.bash" >> ~/.bashrc && \
    # echo "export RMW_IMPLEMENTATION=rmw_cyclonedds_cpp" >> ~/.bashrc && \
    echo "source ${PACKAGE_DIR}/bin/mumble_physical_runtime_bashrc.sh" >> ~/.bashrc

CMD /bin/bash